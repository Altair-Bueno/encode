on:
  workflow_dispatch:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "*"

jobs:
  typos-cli:
    name: typos
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4
      - name: Install Typos
        uses: taiki-e/install-action@v2
        with:
          tool: typos-cli
      - name: run typos
        run: typos

  taplo-toml-fmt:
    name: taplo fmt
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4
      - name: Install Taplo
        uses: taiki-e/install-action@v2
        with:
          tool: taplo-cli
      - name: Run Taplo
        id: taplo
        run: taplo fmt --check --diff

  markdownlint:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4
      - name: markdownlint-cli2-action
        uses: DavidAnson/markdownlint-cli2-action@v19
        with:
          globs: "**/*.md"

  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      powerset: ${{ steps.crate-info.outputs.powerset }}
      features: ${{ steps.crate-info.outputs.features }}
      msrv: ${{ steps.crate-info.outputs.msrv }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get crate information
        id: crate-info
        run: python3 .github/define_matrix.py

  rust-checks:
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      matrix:
        features: ${{ fromJSON(needs.define-matrix.outputs.powerset) }}
        toolchain:
          - stable
          - ${{ needs.define-matrix.outputs.msrv }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt,clippy
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.toolchain }}
      - name: Run tests
        run: cargo test --features '${{ matrix.features }}' --all-targets
      - name: Run doc tests
        run: cargo test --features '${{ matrix.features }}' --doc
      - name: Run linter
        run: cargo clippy --features '${{ matrix.features }}'
      - name: Check formatting
        run: cargo fmt --all -- --check
  coverage:
    name: Coverage
    needs:
      - define-matrix
      - rust-checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ needs.define-matrix.outputs.msrv }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ needs.define-matrix.outputs.msrv }}-coverage
      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Gather coverage
        run: cargo tarpaulin --output-dir coverage --out lcov --all-features
      - name: Gather doc coverage
        run: cargo tarpaulin --output-dir coverage --out lcov --all-features --doc --all-targets
      - name: Publish to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
